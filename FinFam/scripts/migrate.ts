import { drizzle } from 'drizzle-orm/node-postgres';
import { migrate } from 'drizzle-orm/node-postgres/migrator';
import { Pool } from 'pg';
import * as dotenv from 'dotenv';
import path from 'path';
import fs from 'fs';

// Carrega as vari√°veis de ambiente
dotenv.config();

/**
 * Script para executar migra√ß√µes do Drizzle ORM
 * 
 * Este script executa as migra√ß√µes do banco de dados usando o Drizzle ORM.
 * Ele verifica se a vari√°vel de ambiente DATABASE_URL est√° definida e
 * executa as migra√ß√µes a partir do diret√≥rio drizzle/migrations.
 */
async function main() {
  console.log('üöÄ Iniciando migra√ß√µes do banco de dados...');

  // Verifica se a vari√°vel de ambiente DATABASE_URL est√° definida
  if (!process.env.DATABASE_URL) {
    console.error('‚ùå Erro: DATABASE_URL n√£o definida no arquivo .env');
    process.exit(1);
  }

  // Verifica se o diret√≥rio de migra√ß√µes existe
  const migrationsDir = path.join(__dirname, '../drizzle/migrations');
  if (!fs.existsSync(migrationsDir)) {
    console.error(`‚ùå Erro: Diret√≥rio de migra√ß√µes n√£o encontrado: ${migrationsDir}`);
    console.log('üìù Execute "npm run migrate:generate" para gerar as migra√ß√µes primeiro.');
    process.exit(1);
  }

  try {
    // Configura a conex√£o com o banco de dados
    const pool = new Pool({
      connectionString: process.env.DATABASE_URL,
      ssl: process.env.NODE_ENV === 'production' ? { rejectUnauthorized: false } : false
    });

    // Inicializa o Drizzle ORM
    const db = drizzle(pool);

    // Executa as migra√ß√µes
    console.log('üîÑ Executando migra√ß√µes...');
    await migrate(db, { migrationsFolder: migrationsDir });

    console.log('‚úÖ Migra√ß√µes conclu√≠das com sucesso!');
    await pool.end();
  } catch (error) {
    console.error('‚ùå Erro ao executar migra√ß√µes:', error);
    process.exit(1);
  }
}

// Executa a fun√ß√£o principal
main();